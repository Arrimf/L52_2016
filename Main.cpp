//—татические члены класса
//«адание : требуетс€ реализовать класс MyString таким образом, чтобы все строки хранились в единственном экземпл€ре.
//Ёто можно сделать так(посредством односв€зного списка) :
//
//
//
//	¬спомогательный класс Counter
//	€вл€етс€ "оберткой" дл€ строки и содержит вспомогательные данные, которые в частности позвол€т избежать 
//																					дублировани€ данных.
//	ѕеременные(обычные) :
//	Х	указатель на динамически создаваемую строку Ц m_pStr
//	Х	счетчик пользователей данной строки - m_nOwners
//	Х	указатель на следующий Counter Ц pNext
//	ћетоды :
//Х	конструктор(конструкторы)
//Х	деструктор
//Х	добавить пользовател€
//Х	убрать пользовател€(что делать, если это был последний пользователь, и строка больше никому не нужна ? )
//Х	Е
//
//ƒл€ того, чтобы обеспечить хранение строки в единственном экземпл€ре, в классе Counter должен хранитьс€ 
//в единственном экземпл€ре перечень всех вспомогательных оберток, (таким образом, в любой момент выполнени€ 
//программы можно получить перечень всех используемых строк).¬ведем статические данные :
//static Counter* Head;
//ј также счетчик указателей :
//static unsigned int m_curCounters;
//—ледует предусмотреть определение и инициализацию статических данных.
//ќсновной класс MyString
//содержит единственное данное Ц указатель на "свой" Counter Ц
//Counter* m_pMyCounter
//¬ведите необходимые на ¬аш взгл€д методы(Ђджентльменский наборї дл€ сложного класса)..
//
//ƒл€ манипул€ции всеми строками введите в класс статические методы :
//Х	распечатать все строки
//Х	во всех объектах MyString изменить регистр
//Х	вывести строки по алфавиту
//Х	Е
//ку

#include <tchar.h>
#include <iostream>
#include <conio.h>
#include "MyString.h"


#define _CRT_SECURE_NO_WARNINGS

#define _SP system("pause");

//using namespace std;


//size_t /*MyString::*/ Counter::m_cnt = 0;


MyString::Counter* MyString::Counter::Head = nullptr;

void main() {

	MyString S1("Abc");
	MyString S2("Abc");

	MyString S3(S2);
	MyString S4(MyString("Abc"));

	MyString S5("ku-ku");

	S4 = S5;
	MyString S7;
	S7 = MyString("zxc");

	//std::cout << S7;

	MyString::ShowAll();

	MyString::Sort();

	std::cout << std::endl;
	MyString::ShowAll();
	_SP


}